{"version":3,"sources":["components/Input/Input.tsx","components/Button/Button.tsx","components/Form/Form.tsx","components/TodoItem/TodoItem.tsx","redux/redusers/constants.tsx","components/TodoList/TodoList.tsx","redux/actions/todosActions.tsx","redux/redusers/todoReduser.tsx","redux/store.tsx","App.js","reportWebVitals.js","index.js","components/TodoItem/TodoItem.module.css","components/TodoList/TodoList.module.css"],"names":["Input","text","onChange","value","Button","onClick","style","cursor","Form","onClickAdd","useState","textTodo","setTextTodo","event","target","trim","TodoItem","time","onDelete","onComplete","textDecoration","id","className","styles","todoItem","display","margin","buttonDelete","buttonComplete","ACTIONS","TodoList","todos","useSelector","state","dispatch","useDispatch","onClickDelete","type","deleteTodo","onClickComplete","completeTodo","onCountComplete","reduce","prev","current","todoList","todoList__form","alert","length","todoList__todoItems","map","item","defaultState","store","createStore","action","date","Date","newTodo","Math","random","toString","slice","toLocaleDateString","toLocaleTimeString","newTodos","filter","composeWithDevTools","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9f4e8bae.chunk.js","sourcesContent":["import { ChangeEventHandler } from 'react';\r\n\r\ninterface IProps {\r\n  text: string;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\nexport const Input = ({ text, onChange }: IProps) => {\r\n  return <input value={text} onChange={onChange} />;\r\n};\r\n","interface IProps {\r\n  text: string;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const Button = ({ text, onClick }: IProps) => {\r\n  return (\r\n    <button style={{ cursor: 'pointer' }} onClick={onClick}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n","import { Input } from '../Input/Input';\r\nimport { Button } from '../Button/Button';\r\nimport { ChangeEvent } from 'react';\r\nimport { useState } from 'react';\r\n\r\ninterface IProps {\r\n  onClickAdd: (textTodo: string) => void;\r\n}\r\n\r\nexport const Form = ({ onClickAdd }: IProps) => {\r\n  const [textTodo, setTextTodo] = useState<string>('');\r\n\r\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTextTodo(event.target.value);\r\n  };\r\n\r\n  const handleAddNewTodo = () => {\r\n    onClickAdd(textTodo.trim());\r\n    setTextTodo('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input text={textTodo} onChange={onChangeValue} />\r\n      <Button text='Add' onClick={handleAddNewTodo} />\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from '../Button/Button';\r\nimport styles from '../TodoItem/TodoItem.module.css';\r\n\r\nexport interface ITodoProps {\r\n  text: string;\r\n  onDelete: () => void;\r\n  onComplete: () => void;\r\n  textDecoration: string;\r\n  time: string;\r\n  id: string;\r\n}\r\n\r\nexport function TodoItem({\r\n  text,\r\n  time,\r\n  onDelete,\r\n  onComplete,\r\n  textDecoration,\r\n  id,\r\n}: ITodoProps) {\r\n  return (\r\n    <div className={styles.todoItem} style={{ display: 'flex' }}>\r\n      {time ? (\r\n        <p style={{ textDecoration: `${textDecoration}` }}>{time}</p>\r\n      ) : null}\r\n      <p style={{ textDecoration: `${textDecoration}`, margin: '0px 20px' }}>\r\n        {text}\r\n      </p>\r\n      <div className={styles.buttonDelete}>\r\n        <Button text='&#10006;' onClick={onDelete} />\r\n      </div>\r\n      <div className={styles.buttonComplete}>\r\n        <Button text='&#10004;' onClick={onComplete} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const ACTIONS = {\r\n  ADD_TODO: 'CLICK_ADD_TODO',\r\n  DELETE: 'CLICK_DELETE_TODO',\r\n  COMPLETE: 'CLICK_COMPLETE_TODO',\r\n};\r\n","import { Form } from '../Form/Form';\r\nimport { TodoItem } from '../TodoItem/TodoItem';\r\nimport styles from '../TodoList/TodoList.module.css';\r\nimport { ITodosState } from '../../redux/redusers/todoReduser';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo } from '../../redux/actions/todosActions';\r\nimport { deleteTodo } from '../../redux/actions/todosActions';\r\nimport { completeTodo } from '../../redux/actions/todosActions';\r\n\r\nexport const TodoList = () => {\r\n  const state = useSelector((state: ITodosState) => state);\r\n  const todos = state.todos;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onClickAdd = (textTodo: string) => {\r\n    if (textTodo) {\r\n      dispatch(addTodo(textTodo));\r\n    } else alert('Oops, you have nothing to do...');\r\n  };\r\n\r\n  const onClickDelete = (id: string) => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n\r\n  const onClickComplete = (id: string) => {\r\n    dispatch(completeTodo(id));\r\n  };\r\n\r\n  const onCountComplete = todos.reduce((prev, current) => {\r\n    if (current.textDecoration === 'line-through') {\r\n      return prev + 1;\r\n    }\r\n    return prev;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className={styles.todoList}>\r\n      <h1>To do list</h1>\r\n      <div className={styles.todoList__form}>\r\n        <Form onClickAdd={onClickAdd} />\r\n      </div>\r\n      <p>Total cases: {todos.length}</p>\r\n      <p>Finished cases: {onCountComplete}</p>\r\n      <p>Unfinished cases: {todos.length - onCountComplete}</p>\r\n      <div className={styles.todoList__todoItems}>\r\n        {todos.map((item) => {\r\n          return (\r\n            <TodoItem\r\n              text={item.text}\r\n              onDelete={() => onClickDelete(item.id)}\r\n              onComplete={() => onClickComplete(item.id)}\r\n              key={item.id}\r\n              id={item.id}\r\n              textDecoration={item.textDecoration}\r\n              time={item.time}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ACTIONS } from '../redusers/constants';\r\n\r\nexport const addTodo = (text: string) => {\r\n  return {\r\n    type: ACTIONS.ADD_TODO,\r\n    text: text,\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id: string) => {\r\n  return {\r\n    type: ACTIONS.DELETE,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const completeTodo = (id: string) => {\r\n  return { type: ACTIONS.COMPLETE, id: id };\r\n};\r\n","export interface IStateProps {\r\n  text: string;\r\n  textDecoration: string;\r\n  time: string;\r\n  id: string;\r\n}\r\n\r\nexport interface ITodosState {\r\n  todos: IStateProps[];\r\n}\r\n\r\nconst defaultState: ITodosState = {\r\n  todos: [],\r\n};\r\n\r\nexport const todoReducer = (state = defaultState, action: any) => {\r\n  if (action.type === 'CLICK_ADD_TODO') {\r\n    const date = new Date();\r\n    const newTodo = {\r\n      text: action.text,\r\n      id: 'id' + Math.random().toString(16).slice(2),\r\n      textDecoration: 'none',\r\n      time: `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`,\r\n    };\r\n    const newTodos = [...state.todos, newTodo];\r\n    return { todos: newTodos };\r\n  }\r\n\r\n  if (action.type === 'CLICK_DELETE_TODO') {\r\n    const newTodos = state.todos.filter((item) => {\r\n      return item.id !== action.id;\r\n    });\r\n    return { todos: newTodos };\r\n  }\r\n\r\n  if (action.type === 'CLICK_COMPLETE_TODO') {\r\n    const newTodos = state.todos.map((item) => {\r\n      if (item.id === action.id && item.textDecoration === 'none') {\r\n        item.textDecoration = 'line-through';\r\n      } else if (\r\n        item.id === action.id &&\r\n        item.textDecoration === 'line-through'\r\n      ) {\r\n        item.textDecoration = 'none';\r\n      }\r\n      return item;\r\n    });\r\n    return { todos: newTodos };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { todoReducer } from './redusers/todoReduser';\r\n\r\nexport const store = createStore(todoReducer, composeWithDevTools());\r\n","import './App.css';\r\nimport { TodoList } from './components/TodoList/TodoList';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className='wrapper'>\r\n        <div className='App'>\r\n          <TodoList />\r\n        </div>\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDelete\":\"TodoItem_buttonDelete__2_Bnv\",\"buttonComplete\":\"TodoItem_buttonComplete__1yTbf\",\"todoItem\":\"TodoItem_todoItem__3VtT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__gkbBR\",\"todoList__form\":\"TodoList_todoList__form__19PJG\",\"todoList__todoItems\":\"TodoList_todoList__todoItems__3ce74\"};"],"sourceRoot":""}